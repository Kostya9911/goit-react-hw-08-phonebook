{"version":3,"file":"static/js/490.f8eabc6c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","Redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact_form\":\"ContactForm_contact_form__MxVfX\",\"contact_form_label\":\"ContactForm_contact_form_label__5R0kL\",\"contact_form_input\":\"ContactForm_contact_form_input__b81kb\",\"btn_add\":\"ContactForm_btn_add__Xc9Xe\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import css from './ContactForm.module.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'Redux/contacts/operations';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport useSound from 'use-sound';\nimport btn_snd from '../Sounds/btn_snd.mp3';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [play, { stop }] = useSound(btn_snd, { volume: 0.5 });\n\n  const handleAddContact = (name, number) => {\n    const isExist = contacts.find(contact => contact.name === name);\n\n    if (isExist) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContact(contact));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const name = evt.currentTarget.name.value;\n    const number = evt.currentTarget.number.value;\n    handleAddContact(name, number);\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <form\n      className={css.contact_form}\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <label className={css.contact_form_label}>\n        Name\n        <input\n          className={css.contact_form_input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.contact_form_label}>\n        Number\n        <input\n          className={css.contact_form_input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button\n        type=\"submit\"\n        onMouseEnter={() => {\n          play();\n        }}\n        onMouseLeave={() => {\n          stop();\n        }}\n        className={css.btn_add}\n      >\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputListContact\":\"ContactItem_inputListContact__GvRnX\",\"inputListContactEdit\":\"ContactItem_inputListContactEdit__K1HhO ContactItem_inputListContact__GvRnX\",\"widthName\":\"ContactItem_widthName__T-yeR\",\"widthNumber\":\"ContactItem_widthNumber__7sSHx\",\"btn\":\"ContactItem_btn__1h5dG\"};","import PropTypes from 'prop-types';\nimport useSound from 'use-sound';\nimport css from './ContactItem.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { patchContact } from 'Redux/contacts/operations';\nimport btn_snd from '../Sounds/btn_snd.mp3';\n\n\nexport const ContactItem = ({ onDelete, name, number, id }) => {\n  const [editContactState, setEditContactState] = useState(false);\n  const [currentName, setCurrentName] = useState(name);\n  const [currentNumber, setCurrentNumber] = useState(number);\n\n  const dispatch = useDispatch();\n\n  const [play, { stop }] = useSound(btn_snd, { volume: 0.5 });\n\n  const cancelChangeContact = () => {\n    setCurrentName(name);\n    setCurrentNumber(number);\n    setEditContactState(!editContactState);\n  };\n\n  const changeStateConponents = () => setEditContactState(!editContactState);\n\n  const handleSubmitFormChangeContact = e => {\n    e.preventDefault();\n    const contact = {\n      name: currentName,\n      number: currentNumber,\n      id,\n    };\n    dispatch(patchContact(contact));\n  };\n\n  return (\n    <form\n      className={css.formListContact}\n      autoComplete=\"off\"\n      onSubmit={handleSubmitFormChangeContact}\n    >\n      <input\n        className={`${\n          !editContactState ? css.inputListContact : css.inputListContactEdit\n        } ${css.widthName}`}\n        type=\"text\"\n        name=\"name\"\n        onChange={e => setCurrentName(e.currentTarget.value)}\n        value={currentName}\n        disabled={!editContactState}\n        size=\"300px\"\n      />\n      <input\n        className={`${\n          !editContactState ? css.inputListContact : css.inputListContactEdit\n        } ${css.widthNumber}`}\n        type=\"tel\"\n        name=\"number\"\n        size=\"300px\"\n        onChange={e => setCurrentNumber(e.currentTarget.value)}\n        value={currentNumber}\n        disabled={!editContactState}\n      />\n      <button\n        className={css.btn}\n        type={!editContactState ? 'submit' : 'button'}\n        onClick={changeStateConponents}\n        onMouseEnter={() => {\n          play();\n        }}\n        onMouseLeave={() => {\n          stop();\n        }}\n      >\n        {editContactState ? 'Save' : 'Edit'}\n      </button>\n      <button\n        className={css.btn}\n        type=\"button\"\n        onClick={editContactState ? cancelChangeContact : onDelete}\n        onMouseEnter={() => {\n          play();\n        }}\n        onMouseLeave={() => {\n          stop();\n        }}\n      >\n        {editContactState ? 'Cancel' : 'Delete'}\n      </button>\n    </form>\n  );\n};\n\nContactItem.propTypes = {\n  onDelete: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"counterVisibleContacts\":\"ContactList_counterVisibleContacts__MS3UT\",\"wrapper_contactList\":\"ContactList_wrapper_contactList__qE8PP\",\"oll\":\"ContactList_oll__RD43n\",\"contactListItem\":\"ContactList_contactListItem__3th7-\"};","import { ContactItem } from '../ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'Redux/contacts/operations';\nimport {\n  selectContacts,\n  selectVisibleContacts,\n} from 'Redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <div className={css.wrapper_contactList}>\n      <p className={css.counterVisibleContacts}>\n        {filteredContacts.length}&nbsp;of&nbsp;\n        {contacts.length}\n      </p>\n\n      <ol className={css.oll}>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} className={css.contactListItem}>\n              <ContactItem\n                onDelete={() => {\n                  handleDeleteContact(id);\n                }}\n                name={name}\n                number={number}\n                id={id}\n              />\n            </li>\n          );\n        })}\n      </ol>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"Contacts_app__Q1T68\",\"wrapper_cotacts_forms\":\"Contacts_wrapper_cotacts_forms__UcAFC\"};","// extracted by mini-css-extract-plugin\nexport default {\"label_filter\":\"Filter_label_filter__-5ECC\",\"input_filter\":\"Filter_input_filter__o87tO\"};","import { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { changeFilter } from 'Redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = evt => {\n    dispatch(changeFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <label className={css.label_filter}>\n      Find contact by name\n      <input\n        className={css.input_filter}\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChangeFilter}\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nimport { fetchContacts } from 'Redux/contacts/operations';\n\nimport css from './Contacts.module.css';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <div className={css.app}>\n        <div className={css.wrapper_cotacts_forms}>\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2 className={css.title_contacts}>Contacts</h2>\n          <Filter />\n        </div>\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectVisibleContacts","filter","contact","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useSound","btn_snd","volume","play","stop","className","css","autoComplete","onSubmit","evt","preventDefault","number","isExist","alert","addContact","handleAddContact","currentTarget","reset","type","pattern","title","required","onMouseEnter","onMouseLeave","ContactItem","onDelete","id","useState","editContactState","setEditContactState","currentName","setCurrentName","currentNumber","setCurrentNumber","e","patchContact","onChange","disabled","size","onClick","ContactList","filteredContacts","deleteContact","handleDeleteContact","Filter","changeFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}